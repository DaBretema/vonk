
# ------------------------------------------------------------------------- #
# GLOBAL SETTINGS
# ------------------------------------------------------------------------- #

cmake_minimum_required(VERSION 3.0)
set(CMAKE_MESSAGE_LOG_LEVEL "WARNING")

set(pName Vonsai)
project(${pName})

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON) # Makefile and Ninja only

set(CMAKE_CXX_FLAGS "")
set(CMAKE_CXX_FLAGS_RELEASE "-Ofast")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g3 -ggdb -Wall -Wpedantic -Wextra -Wweak-vtables -fexceptions")


# ------------------------------------------------------------------------- #
# THIRD PARTY
# ------------------------------------------------------------------------- #

# DOCS
set (FMT_DOC "")
set (GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set (ASSIMP_BUILD_DOCS OFF CACHE BOOL "" FORCE)

# VULKAN
find_package(Vulkan REQUIRED)

# ASSIMP
## Static?
set (ASSIMP_BUILD_SHARED_LIBS OFF BOOL)
## Disable extras
set (ASSIMP_INSTALL OFF CACHE BOOL "" FORCE)
set (ASSIMP_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set (ASSIMP_BUILD_ASSIMP_TOOLS OFF CACHE BOOL "" FORCE)
## Disable importers/exporters
set (ASSIMP_NO_EXPORT ON CACHE BOOL "" FORCE)
set (ASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT OFF CACHE BOOL "" FORCE)
## Enable selected importers
set (ASSIMP_BUILD_FBX_IMPORTER ON BOOL)
set (ASSIMP_BUILD_OBJ_IMPORTER ON BOOL)

# ADD FOLDERS
add_subdirectory(vendor/fmt)
add_subdirectory(vendor/glm)
add_subdirectory(vendor/glfw)
# add_subdirectory(vendor/assimp)

set(pLibsIncl ${Vulkan_INCLUDE_DIRS})
set(pLibs fmt glm glfw ${Vulkan_LIBRARIES})

message(STATUS "V LibsIncl: ${Vulkan_INCLUDE_DIRS}")
message(STATUS "V Libs: ${Vulkan_LIBRARIES}")


# ------------------------------------------------------------------------- #
# PROJECT
# ------------------------------------------------------------------------- #

add_library(${pName} STATIC
    ./include/VwVulkan.h

    ./include/VwDebugMessenger.h
    ./src/VwDebugMessenger.cpp

    ./include/VwQueueFamily.h
    ./src/VwQueueFamily.cpp

    #---
    ./include/Settings.h
    ./include/Macros.h

    #---

    ./include/Vonsai.h
    ./src/Vonsai.cpp
)
target_link_libraries(${pName} PRIVATE ${pLibs})
target_include_directories(${pName} PUBLIC "./src" "./include" "./vendor" ${pLibsIncl})

# ------------------------------------------------------------------------- #
# EXE and TESTING
# ------------------------------------------------------------------------- #

function(addTest tName)
    add_executable(${tName} test/${tName}.cpp)
    target_link_libraries(${tName} PRIVATE ${pLibs} ${pName})
    add_test(COMMAND ${tName})
endfunction()

addTest(Sandbox)
